<?xml version="1.0" encoding="utf-8" standalone="no"?>
<problem revision="25" short-name="futures-market-trends" url="https://polygon.codeforces.com/p9rNsfy/pkunyavskiy/futures-market-trends">
    <names>
        <name language="english" value="Futures Market Trends"/>
    </names>
    <statements>
        <statement charset="UTF-8" language="english" mathjax="true" path="statements/english/problem.tex" type="application/x-tex"/>
        <statement language="english" path="statements/.pdf/english/problem.pdf" type="application/pdf"/>
    </statements>
    <judging cpu-name="Intel(R) Core(TM) i3-8100 CPU @ 3.60GHz" cpu-speed="3600" input-file="" output-file="">
        <testset name="tests">
            <time-limit>2000</time-limit>
            <memory-limit>536870912</memory-limit>
            <test-count>47</test-count>
            <input-path-pattern>tests/%02d</input-path-pattern>
            <answer-path-pattern>tests/%02d.a</answer-path-pattern>
            <tests>
                <test method="manual" sample="true"/>
                <test method="manual" sample="true"/>
                <test method="manual" sample="true"/>
                <test cmd="gen_rand -n=10 -ans=0 -min=-10 -max=10" method="generated"/>
                <test cmd="gen_rand -n=10 -ans=5 -min=-10 -max=10" method="generated"/>
                <test cmd="gen_rand -n=10 -ans=10 -min=-10 -max=10 -seed 100" method="generated"/>
                <test cmd="gen_rand -n=10 -ans=20 -min=-100 -max=100" method="generated"/>
                <test cmd="gen_rand -n=10 -ans=30 -min=-100 -max=100" method="generated"/>
                <test cmd="gen_rand -n=10 -ans=35 -min=-100 -max=100" method="generated"/>
                <test cmd="gen_rand -n=3 -ans=0 -min=-10 -max=10" method="generated"/>
                <test cmd="gen_rand -n=3 -ans=1 -min=-10 -max=10" method="generated"/>
                <test cmd="gen_rand -n=10 -ans=0 -min=1000 -max=1000" method="generated"/>
                <test cmd="gen_rand -n=1000 -ans=0 -min=1000 -max=1000" method="generated"/>
                <test cmd="gen_rand -n=1000 -ans=0 -min=-1000 -max=1000" method="generated"/>
                <test cmd="gen_rand -n=1000 -ans=1000 -min=-1000 -max=1000" method="generated"/>
                <test cmd="gen_rand -n=1000 -ans=10000 -min=-1000 -max=1000" method="generated"/>
                <test cmd="gen_rand -n=1000 -ans=100000 -min=-1000 -max=1000" method="generated"/>
                <test cmd="gen_rand -n=1000 -ans=200000 -min=-1000 -max=1000 -seed 102" method="generated"/>
                <test cmd="gen_rand -n=1000 -ans=300000 -min=-1000 -max=1000 -seed 0" method="generated"/>
                <test cmd="gen_rand -n=1000 -ans=400000 -min=-1000 -max=1000 -seed 221" method="generated"/>
                <test cmd="gen_rand -n=1000 -ans=498245 -min=-1000 -max=1000 -seed 56" method="generated"/>
                <test cmd="gen_rand -n=3000 -ans=0 -min=1000 -max=1000" method="generated"/>
                <test cmd="gen_rand -n=3000 -ans=0 -min=-1000 -max=1000" method="generated"/>
                <test cmd="gen_rand -n=3000 -ans=1000 -min=-1000 -max=1000" method="generated"/>
                <test cmd="gen_rand -n=3000 -ans=10000 -min=-1000 -max=1000" method="generated"/>
                <test cmd="gen_rand -n=3000 -ans=100000 -min=-1000 -max=1000" method="generated"/>
                <test cmd="gen_rand -n=3000 -ans=200000 -min=-1000 -max=1000 -seed 200" method="generated"/>
                <test cmd="gen_rand -n=3000 -ans=300000 -min=-1000 -max=1000 -seed 33" method="generated"/>
                <test cmd="gen_rand -n=3000 -ans=400000 -min=-1000 -max=1000 -seed 406" method="generated"/>
                <test cmd="gen_rand -n=3000 -ans=500000 -min=-1000 -max=1000 -seed 504" method="generated"/>
                <test cmd="gen_rand -n=3000 -ans=2000000 -min=-1000 -max=1000 -around=1000000 -seed 104" method="generated"/>
                <test cmd="gen_sorted -min=-1000 -max=1000 -step=1 -dir=asc -C=787.788" method="generated"/>
                <test cmd="gen_sorted -min=-1000 -max=1000 -step=1 -dir=desc -C=787.788" method="generated"/>
                <test cmd="gen_sorted -min=-1000 -max=1000 -step=1 -dir=asc -C=0.00787788" method="generated"/>
                <test cmd="gen_sorted -min=-1000 -max=1000 -step=1 -dir=desc -C=0.00787788" method="generated"/>
                <test cmd="gen_sorted -min=-1000 -max=1000 -step=10 -dir=asc -C=787.788" method="generated"/>
                <test cmd="gen_sorted -min=-1000 -max=1000 -step=10 -dir=desc -C=787.788" method="generated"/>
                <test cmd="gen_sorted -min=-1000 -max=1000 -step=10 -dir=asc -C=0.00787788" method="generated"/>
                <test cmd="gen_sorted -min=-1000 -max=1000 -step=10 -dir=desc -C=0.00787788" method="generated"/>
                <test cmd="gen_sorted -min=-1000 -max=1000 -step=100 -dir=asc -C=787.788" method="generated"/>
                <test cmd="gen_sorted -min=-1000 -max=1000 -step=100 -dir=desc -C=787.788" method="generated"/>
                <test cmd="gen_sorted -min=-1000 -max=1000 -step=100 -dir=asc -C=0.00787788" method="generated"/>
                <test cmd="gen_sorted -min=-1000 -max=1000 -step=100 -dir=desc -C=0.00787788" method="generated"/>
                <test cmd="gen_sorted -min=-1000 -max=1000 -step=1000 -dir=asc -C=787.788" method="generated"/>
                <test cmd="gen_sorted -min=-1000 -max=1000 -step=1000 -dir=desc -C=787.788" method="generated"/>
                <test cmd="gen_sorted -min=-1000 -max=1000 -step=1000 -dir=asc -C=0.00787788" method="generated"/>
                <test cmd="gen_sorted -min=-1000 -max=1000 -step=1000 -dir=desc -C=0.00787788" method="generated"/>
            </tests>
        </testset>
    </judging>
    <files>
        <resources>
            <file path="files/olymp.sty"/>
            <file path="files/problem.tex"/>
            <file path="files/statements.ftl"/>
            <file path="files/testlib.h" type="h.g++"/>
        </resources>
        <executables>
            <executable>
                <source path="files/gen_rand.cpp" type="cpp.g++17"/>
                <binary path="files/gen_rand.exe" type="exe.win32"/>
            </executable>
            <executable>
                <source path="files/gen_sorted.cpp" type="cpp.g++17"/>
                <binary path="files/gen_sorted.exe" type="exe.win32"/>
            </executable>
            <executable>
                <source path="files/validate.cpp" type="cpp.g++17"/>
                <binary path="files/validate.exe" type="exe.win32"/>
            </executable>
        </executables>
    </files>
    <assets>
        <checker name="std::ncmp.cpp" type="testlib">
            <source path="files/check.cpp" type="cpp.g++17"/>
            <binary path="check.exe" type="exe.win32"/>
            <copy path="check.cpp"/>
            <testset>
                <test-count>0</test-count>
                <input-path-pattern>files/tests/checker-tests/%02d</input-path-pattern>
                <output-path-pattern>files/tests/checker-tests/%02d.o</output-path-pattern>
                <answer-path-pattern>files/tests/checker-tests/%02d.a</answer-path-pattern>
                <tests/>
            </testset>
        </checker>
        <validators>
            <validator>
                <source path="files/validate.cpp" type="cpp.g++17"/>
                <binary path="files/validate.exe" type="exe.win32"/>
                <testset>
                    <test-count>4</test-count>
                    <input-path-pattern>files/tests/validator-tests/%02d</input-path-pattern>
                    <tests>
                        <test verdict="valid"/>
                        <test verdict="valid"/>
                        <test verdict="invalid"/>
                        <test verdict="invalid"/>
                    </tests>
                </testset>
            </validator>
        </validators>
        <solutions>
            <solution tag="time-limit-exceeded">
                <source path="solutions/oil-tourist-tl.cpp" type="cpp.g++17"/>
                <binary path="solutions/oil-tourist-tl.exe" type="exe.win32"/>
            </solution>
            <solution tag="accepted">
                <source path="solutions/oil-tourist.py" type="python.pypy3"/>
                <binary path="solutions/oil-tourist.pypys3" type="pythonx.pypy3"/>
            </solution>
            <solution tag="main">
                <source path="solutions/oil_pkun.cpp" type="cpp.g++17"/>
                <binary path="solutions/oil_pkun.exe" type="exe.win32"/>
            </solution>
        </solutions>
    </assets>
    <properties>
        <property name="tests-wellformed" value="true"/>
    </properties>
    <stresses>
        <stress-count>0</stress-count>
        <stress-path-pattern>stresses/%03d</stress-path-pattern>
        <list/>
    </stresses>
    <tags>
        <tag value="math"/>
    </tags>
</problem>
