{"scoring":null,"notes":"Informally speaking, a context-free formal grammar is a set of terminals (lowercase English letters in this problem), a set of nonterminals (uppercase English letters in this problem), and a set of rules of how a nonterminal can be replaced with a string of nonterminals or terminals.\r\n\r\nChomsky reduced form is a form where each rule is a replacement with either a single terminal or exactly two nonterminals. In fact, any context-free grammar which does not generate the empty string can be converted to Chomsky reduced form.\r\n\r\nA string of terminals is in the language of the grammar if one can use the rules to convert a string of a single starting nonterminal into the given string. You can get some formal details at \\url{https://en.wikipedia.org/wiki/Context-free\\_grammar}. \r\n\r\nThe formal grammar in the two last examples defines all non-empty correct bracket sequences, with opening brackets denoted with `\\t{c}' and closing brackets denoted with `\\t{j}'.","legend":"You are given a context-free formal grammar in Chomsky reduced form (see Notes section for an explanation of these terms), and a directed graph with each edge labeled with a terminal of the grammar.\r\n\r\nFind the length of the shortest path in the graph from vertex $s$ to vertex $t$ such that concatenation of the labels on this path is in the language of the grammar, or state that there is no such path.\r\n","authorLogin":"dvorkin","language":"english","timeLimit":2000,"output":"If there is no path from $s$ to $t$ with labels forming a string from the language, output `\\t{NO}'. Otherwise, output the length of the shortest such path.","inputFile":"stdin","outputFile":"stdout","input":"The first line contains the number of productions in the grammar $p$ ($1 \\le p \\le 100$).\r\n\r\nEach of the next $p$ lines contains a production in the form of either `\\t{A -> BC}' or `\\t{A -> a}'. The lowercase English letters are terminals, the uppercase English letters are nonterminals, and the uppercase letter `\\t{S}' is the starting nonterminal. It's guaranteed that \\t{S} appears as left hand side of at least one production. \r\n\r\nThe next line contains four integers $n$, $m$, $s$, and $t$ ($1 \\le s, t \\le n \\le 26$; $0 \\le m \\le n^2$), denoting the number of vertices in the graph, the number of edges in the graph, and indices of the start and the finish.\r\n\r\nEach of the next $m$ lines contains a description of an edge in the form `\\t{u v x}', denoting an edge from vertex $u$ to vertex $v$ labeled with $x$ ($1 \\le u, v \\le n$; $x$ is a lowercase English letter). There are no multiedges in the graph, but there might be loops and different edges from $u$ to $v$ and from $v$ to $u$.","authorName":"Mikhail Dvorkin","sampleTests":[{"output":"5\r\n","input":"5\r\nS -> AB\r\nA -> a\r\nA -> AA\r\nB -> BB\r\nB -> b\r\n8 8 1 4\r\n1 2 a\r\n2 3 b\r\n3 4 a\r\n1 5 a\r\n5 6 a\r\n6 7 a\r\n7 8 b\r\n8 4 b\r\n","inputFile":"example.01","outputFile":"example.01.a"},{"output":"12\r\n","input":"6\r\nS -> SS\r\nS -> LA\r\nS -> LR\r\nA -> SR\r\nL -> c\r\nR -> j\r\n4 5 1 1\r\n1 2 c\r\n2 3 c\r\n3 1 j\r\n1 4 j\r\n4 3 j\r\n","inputFile":"example.02","outputFile":"example.02.a"},{"output":"NO\r\n","input":"6\r\nS -> SS\r\nS -> LA\r\nS -> LR\r\nA -> SR\r\nL -> c\r\nR -> j\r\n4 5 1 4\r\n1 2 c\r\n2 1 c\r\n2 3 c\r\n3 4 j\r\n4 3 j\r\n","inputFile":"example.03","outputFile":"example.03.a"}],"name":"Grammar Path","interaction":null,"memoryLimit":536870912,"tutorial":""}