%!PS
% Visualizes solutions to testdata (as generated by ./maks -d)

/input (%stdin) (r) file def

/gets {  % --gets--> line
    input 20 string readline pop
} bind def

/readpoly {  % --readpoly--> polygon  (a polygon is an array of 2D point arrays)
    gets cvi dup array 0 1 4 -1 roll 1 sub {
        1 index exch [gets cvx exec] put
    } for
} bind def

/polypath { % polygon --polypath-->  (adds polygon to the current path)
    true exch {
        aload pop 3 -1 roll {moveto} {lineto} ifelse false
    } forall pop
    closepath
} bind def

gets cvi {
    gets pop readpoly readpoly  % inner outer

    % Fit drawing to page (using bounding box of outer path)
    dup polypath pathbbox /y2 exch def /x2 exch def /y1 exch def /x1 exch def
    currentpagedevice /PageSize get aload {2 div} forall translate
    y2 y1 sub div exch x2 x1 sub div min dup scale
    [x1 x2 add y1 y2 add] {neg 2 div} forall translate newpath

    % Draw the testcase:
    polypath polypath .667 setgray eofill
    1 setlinejoin 0.1 setlinewidth 0 setgray readpoly polypath stroke showpage
} repeat
