/**
   一个六面骰子，问两种涂色方案是否一致
   涂色方案一致指的是通过旋转可以令两种涂色方案在空间中的朝向一模一样
*/
#include <stdio.h>
#include <iostream>
#include <string>
using namespace std;

//顺序是：上下，然后从前开始，右手螺旋定则，大拇指朝上
int B[][6] = {
    //1上6下有4种情况
    {1,6,2,4,5,3},
    {1,6,4,5,3,2},
    {1,6,5,3,2,4},
    {1,6,3,2,4,5},
    //6上1下又有4种情况
    {6,1,2,3,5,4},
    {6,1,3,5,4,2},
    {6,1,5,4,2,3},
    {6,1,4,2,3,5},
    //3上4下
    {3,4,2,1,5,6},
    {3,4,1,5,6,2},
    {3,4,5,6,2,1},
    {3,4,6,2,1,5},
    //4上3下
    {4,3,2,6,5,1},
    {4,3,6,5,1,2},
    {4,3,5,1,2,6},
    {4,3,1,2,6,5},
    //2上5下
    {2,5,1,3,6,4},
    {2,5,3,6,4,1},
    {2,5,6,4,1,3},
    {2,5,4,1,3,6},
    //2下5上
    {5,2,1,4,6,3},
    {5,2,4,6,3,1},
    {5,2,6,3,1,4},
    {5,2,3,1,4,6}
};

//s是按照123456的顺序，将其按照B[idx]所示的顺序重排一遍，生成一个新的字符串
string f(string const&s,int idx){
    string ret(6,'\0');
    for(int i=0;i<6;++i){
        int t = B[idx][i] - 1;
        ret[i] = s[t];
    }
    return ret;
}

int main(){
    //freopen("1.txt","r",stdin);
    string s;
    while(cin>>s){
        string s1 = s.substr(0,6);
        string s2 = s.substr(6);
        //将s1重排一遍
        s1 = f(s1,0);
        //依次重排s2，看是否有相等的
        bool flag = false;
        for(int i=0;i<24;++i){
            if(f(s2,i)==s1){
                flag = true;
                break;
            }
        }
        cout<<(flag?"TRUE":"FALSE")<<endl;
    }
    return 0;
}

